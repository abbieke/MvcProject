@model MvcProjectTest.Models.CustomerMix

@{
    ViewBag.Title = "CustomerIndex";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

<div class="member-body">
    <div class="container margintop" id="member-tab">
        <div class="flex">
            <div class="membercentre-laft">

                <div class="membercentre-laft-title">
                    Welcome !!
                </div>
                <div class="memberpage-brief">
                    <div class="membercentre-laft-title">使用者: @User.Identity.Name</div>
                    <!-- <div class="member-edit">
                        <a href="#tab-MemberProfile" class="member-edit">
                            <i class="fas fa-pen"></i>
                            personal information
                        </a>
                        </ul>
                    </div> -->
                </div>

                <div class="member-menu">
                    <div class="member-menu-block">
                        <ul class="memebr-menu-row">
                            <li class="memebr-menu-li">
                                <a href="#tab-MemberProfile"
                                   class="memebr-menu-a-text">會員資料</a>
                            </li>
                            <li class="memebr-menu-li">
                                <a href="#tab-Modifypassword"
                                   class="memebr-menu-a-text">修改密碼</a>
                            </li>
                            <li class="memebr-menu-li">
                                <a href="#tab-OrderDetail"
                                   class="memebr-menu-a-text">訂單資訊</a>
                            </li>
                            <li class="memebr-menu-li">
                                <a href="#tab-Coupon" class="memebr-menu-a-text">優惠券專區</a>
                            </li>

                        </ul>
                    </div>
                </div>
            </div>

            <div class="membercentre-right">
                <div class="membercentre-titletext">
                    <h2>會員專區</h2>
                </div>
                <div id="tab-MemberProfile" class="member-content">
                    @using (Html.BeginForm("CustomerIndex", "Customer", new { id = 1 }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <form>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.CustomerView.CustomerAccount)
                                    </div>
                                    <div class="member-input-textbox">
                                        @Html.EditorFor(model => model.CustomerView.CustomerAccount, new { htmlAttributes = new { @class = "member-input-textbox-input", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.CustomerView.CustomerAccount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.CustomerView.CustomerName)
                                    </div>
                                    <div class="member-input-textbox">
                                        @Html.EditorFor(model => model.CustomerView.CustomerName, new { htmlAttributes = new { @class = "member-input-textbox-input" } })
                                        @Html.ValidationMessageFor(model => model.CustomerView.CustomerName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.CustomerView.CustomerPhone)
                                    </div>
                                    <div class="member-input-textbox">
                                        @Html.EditorFor(model => model.CustomerView.CustomerPhone, new { htmlAttributes = new { @class = "member-input-textbox-input" } })
                                        @Html.ValidationMessageFor(model => model.CustomerView.CustomerPhone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.CustomerView.CustomerBirth)
                                    </div>
                                    <div class="member-input-textbox">
                                        @Html.TextBoxFor(model => model.CustomerView.CustomerBirth, new { @Value = Model.CustomerView.CustomerBirth.ToString("yyyy/MM/dd"), @class = "datepicker member-input-textbox-input", @readonly = "readonly" })
                                        @*@Html.EditorFor(model => model.CustomerView.CustomerBirth, new {htmlAttributes = new {@type = "text", @class = "member-input-textbox-input", @readonly = "readonly"}})*@
                                        @Html.ValidationMessageFor(model => model.CustomerView.CustomerBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.CustomerView.CustomerEmail)
                                    </div>
                                    <div class="member-input-textbox">
                                        @Html.EditorFor(model => model.CustomerView.CustomerEmail, new { htmlAttributes = new { @class = "member-input-textbox-input" } })
                                        @Html.ValidationMessageFor(model => model.CustomerView.CustomerEmail, "", new { @class = "text-danger" })
                                    </div>
                                    @if (HttpContext.Current.User.IsInRole("NotVerified"))
                                    {
                                        <span class="" style="color: red; white-space: nowrap;">未驗證</span>
                                        @*@Html.ActionLink("重新發信", "testclick", "Account",null, new { @class = "membercentre-submit-button ml-3 btn", @style = "white-space:nowrap;", @role = "button;" })*@
                                        <button id="btn_resend" class="membercentre-submit-button ml-3" style="white-space: nowrap;">重新發信</button>
                                    }
                                    else
                                    {
                                        <span class="fas fa-check-circle" style="color: green"></span>
                                    }
                                </div>

                            </div>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.CustomerView.CustomerAddress)
                                    </div>
                                    <div class="member-input-textbox ">
                                        @Html.EditorFor(model => model.CustomerView.CustomerAddress, new { htmlAttributes = new { @class = "member-input-textbox-input" } })
                                        @Html.ValidationMessageFor(model => model.CustomerView.CustomerAddress, "", new { @class = "text-danger" })
                                        @*<select class="member-input-selectbox">
                                                <option>縣市</option>
                                                <option></option>
                                                <option></option>

                                            </select>
                                            <select class="member-input-selectbox">
                                                <option>鄉/市區</option>
                                                <option></option>
                                                <option></option>
                                            </select>*@

                                    </div>
                                </div>
                                @*<input class="member-input-textbox-input textbox-width" type="text">*@
                            </div>
                            <div class="membercentre-footerbuttonbox member-row">
                                <button class="membercentre-submit-button " type="submit">確認</button>
                            </div>
                        </form>
                    }
                </div>

                <div id="tab-OrderDetail">
                    @foreach (var item in Model.Order)
                    {
                        <div class="membercenter-orderdetail-block">
                            <div class="membercenter-orderdetail-block-header">
                                <ul class="membercenter-orderdetail-list">
                                    <li class="membercenter-order-header-item order-box">訂單編號</li>
                                    <li class="membercenter-order-header-item order-box">訂單日期</li>
                                    <li class="membercenter-order-header-item order-box">總金額</li>
                                    <li class="membercenter-order-header-item order-box">訂單狀態</li>
                                    <li class="membercenter-order-header-item order-box">訂單明細</li>
                                </ul>
                            </div>
                            <div class="membercenter-orderdetail-center-block">
                                <ul class="membercenter-orderdetail-list orderdetail-list-hover">
                                    <li class="membercenter-order-center-item order-box">@item.OrderNo</li>
                                    <li class="membercenter-order-center-item order-box">@item.OrderDate.ToString("yyyy-MM-dd HH:mm:ss")</li>
                                    <li class="membercenter-order-center-item order-box">@item.TotalPrice</li>
                                    <li class="membercenter-order-center-item order-box">
                                        <div class="visibility-button">
                                            <i class="fas fa-eye"></i>
                                            <div class="membercenter-order-shopping-stasus">
                                                <ul class="membercenter-order-shipping-progress">
                                                    <li class="active">訂單成立</li>
                                                    <li class="">準備出貨</li>
                                                    <li class="">運送中</li>
                                                    <li class="">待取貨</li>
                                                    <li class="">完成取貨</li>
                                                    <li class="">交易完成</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </li>
                                    <li class="membercenter-order-center-item order-box">
                                        @*@Html.ActionLink("詳細資訊", "OrderDetail", "Customer", new { id = item.OrderID }, new { @class = "membercente-sohw-orderdatil" })*@
                                        <a href='@Url.Action("OrderDetail", "Customer", new {id = item.OrderID})'
                                           class="membercente-sohw-orderdatil">詳細資訊</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }

                </div>
                <div id="tab-Modifypassword">
                    @using (Html.BeginForm("CustomerIndex", "Customer", new { id = 2 }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <form>
                            <div class="member-row">
                                <div class="flex">
                                    <div class="member-input-label-item">
                                        @Html.LabelFor(model => model.ChangePassword.CustomerAccount)
                                    </div>
                                    <div class="member-input-textbox">
                                        @Html.EditorFor(model => model.ChangePassword.CustomerAccount, new { htmlAttributes = new { @class = "member-input-textbox-input", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.ChangePassword.CustomerAccount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="member-row flex modify-password-row-block">
                                <div class="member-input-label">
                                    @Html.LabelFor(m => m.ChangePassword.CustomerPassword)
                                </div>
                                <div class="member-input-textbox flex">
                                    @Html.PasswordFor(m => m.ChangePassword.CustomerPassword, new { placeholder = "請輸入會員密碼", @class = "member-input-textbox-input" })
                                    @Html.ValidationMessageFor(m => m.ChangePassword.CustomerPassword, "", new { @class = "prompt-text text-dan" })
                                    @*<input id="show-password-textbox1" class="member-input-textbox-input" type="password">*@

                                </div>
                            </div>
                            <div class="member-row flex modify-password-row-block">
                                <div class="member-input-label">
                                    @Html.LabelFor(m => m.ChangePassword.CustomerNewPassword)
                                </div>
                                <div class="member-input-textbox flex">
                                    @Html.PasswordFor(m => m.ChangePassword.CustomerNewPassword, new { placeholder = "請輸入新密碼", @class = "member-input-textbox-input" })
                                    @Html.ValidationMessageFor(m => m.ChangePassword.CustomerNewPassword, "", new { @class = "prompt-text text-dan" })
                                    @*<input id="show-password-textbox2" class="member-input-textbox-input" type="password">*@

                                </div>
                            </div>
                            <div class="member-row flex modify-password-row-block">
                                <div class="member-input-label">
                                    @Html.LabelFor(m => m.ChangePassword.ConfirmPassword)
                                </div>
                                <div class="member-input-textbox flex">
                                    @Html.PasswordFor(m => m.ChangePassword.ConfirmPassword, new { placeholder = "請輸入確認密碼", @class = "member-input-textbox-input" })
                                    @Html.ValidationMessageFor(m => m.ChangePassword.ConfirmPassword, "", new { @class = "prompt-text text-dan" })
                                    @*<input id="show-password-textbox3" class="member-input-textbox-input" type="password">*@

                                </div>
                            </div>
                            <div class="membercentre-footerbuttonbox member-row">
                                <button class="membercentre-submit-button " type="submit">確認</button>
                            </div>
                        </form>
                    }
                </div>
                <div id="tab-Coupon">
                    敬請期待!!
                </div>
            </div>
        </div>
    </div>
</div>
@section topCss {
    <link href="~/Assets/Css/member-stylesheet.css" rel="stylesheet" />
}
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#member-tab").tabs();
            // var $li = $('.newest-tab-title-row li');
            // $($li.eq(0).addClass('active').find('a').attr('href')).siblings('.tab-inner').hide();

            // $li.click(function () {
            //     $($(this).find('a').attr('href')).show().siblings('.tab-inner').hide();
            //     $(this).addClass('active').siblings('.active').removeClass('active');
            // });
        });
    </script>
    <script>
        $("#btn_resend").click(resendMail);
        function resendMail() {
            var usermail = $("#CustomerView_CustomerEmail").val();
            alert('@User.Identity.Name'+","+usermail);
                $.ajax({
                type: "POST",
                url: '@Url.Action("SendAsync", "Account")',
                    data: { account:'@User.Identity.Name', mail: usermail }
                }).done(function (response) {

                });

            }
    </script>

    @*<script>
            var buttonDom;
            var buttonIdName = "show-password-button";
            setShowOnClick();

            function setShowOnClick(){
                for(var i = 1;; i++){

                    buttonDom = document.getElementById(buttonIdName + i);
                    if (!buttonDom) {
                        break;
                    }

                    buttonDom.addEventListener("click", showPassWord);

                }
            }


            function showPassWord() {
                var index = this.id.split("show-password-button")[1];
                var passwordInputDom = document.getElementById("show-password-textbox" + index);
                if (passwordInputDom.type === "password") {
                    passwordInputDom.type = "text";
                    this.value = "Hide";
                } else {
                    passwordInputDom.type = "password";
                    this.value = "Show";
                }
            }
        </script>*@
}
